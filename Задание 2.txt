Что такое проект?
    Проект- временное предприятие, направленное на создание уникального продукта, услуги или результата. Временный характер проектов 
    определяет существование начала и конца работы проекта или ее фазы. Проекты могут существовать самостоятельно или в составе
    программы или портфеля.

Из каких этапов состоит Waterfall model/Каскадная модель?
    Общее планирование -> Пользовательские требования -> Системные требования -> Техническая архитектура -> Деталезированный дизайн ->
    Разработка и отладка -> Интеграция и модульные тесты -> Инсталяционное тестирование -> Системное тестирование -> Приемочное тестирование -> Итоговая отчетность

Какие преимущества и недостатки Waterfall model/Каскадной модели?
    Плюсы: Подробное документирование, прозрачность, прогнозируемость
    Минусы: Все требования должны быть сразу известны, очень много документов, тестирование происходит в конце цикла.

Из каких этапов состоит V-model/V- модель?
    Общее планирование   <-------------------------------------------> Итоговая отчетность  
        Пользовательские требования  <--------------------------> Приемочное тестирование
            Системные требования <-----------------------------> Системное тестирование
                Техническая архитектура <---------------> Инсталяционное тестирование
                    Деталезированный дизайн <---------> Интеграция и модульные тесты
                                        Разработка и отладка
Когда использовать V-model/V- модель?
    V-образная модель подходит для проектов, где требования хорошо определены и изменения маловероятны, а также в сферах, требующих 
    высокого уровня надежности и соответствия стандартам. Её структурированность и акцент на тестировании обеспечивают высокое качество
    конечного продукта, однако она может быть менее гибкой по сравнению с другими моделями разработки, такими как Agile или Scrum.

Из каких этапов состоит Iterative model/Итеративная модель?
    Итеративная модель - метод, подразумевающий создание MVP (minimum viable product) - минимально жизнеспособного продукта и улучшение 
    его с каждой последующей итерацией. Каждая итерация включает в себя этапы анализа, проектирования, написания кода и тестирования. 
    В конце каждой итерации получается некий промежуточный результат, который может быть использован либо как основа для следующей
    итерации, либо как рабочий продукт, который может быть выпущен или использован.

Когда использовать Iterative model/Итеративной модели?
    Итеративная модель разработки подходит для проектов, требующих высокой гибкости, возможности внесения изменений на ходу и регулярной 
    обратной связи с пользователями.

Плюсы и минусы Iterative model/Итеративной модели?
    Плюсы: Улучшенная гибкость, Возможность раннего обнаружения проблем, Более быстрая поставка
    Минусы: Усложнение планирования, Недостаточная точность оценки времени и стоимости, Высокая требовательность к коммуникации

Agile - это?
    Подход к управлению проектами, предполагающий разбивку проекта на этапы, а также непрерывное сотрудничество и совершенствование.
    В рамках этого подхода команды следуют циклу планирования, выполнения и оценки.

Agile манифест - это?
    Это ключевой документ, в котором перечислены фундаментальные идеи и положения методологии разработки ПО.

Какие ценности Agile манифест?
    1. Люди и взаимодействие важнее процессов и инструментов.
    2. Работающий продукт важнее исчерпывающей документации.
    3. Сотрудничество с заказчиком важнее согласования условий контракта.
    4. Готовность к изменениям важнее первоначального плана.

Основные принципы Agile манифест?
    1. Удовлетворение клиента
    2. Приветствие изменений
    3. Частая поставка
    4. Ежедневное сотрудничество
    5. Мотивированные Люди
    6. Разговор вживую
    7. Работающее ПО
    8. Устойчивое развитие
    9. Техническое совершенствование
    10. Простота
    11. Самоорганизация командой
    12. Постоянное улучшение

Scrum - это? (опишите подробно)
    CRUM — это фреймворк (рамочная методология) для управления проектами, особенно популярный в разработке программного 
    обеспечения. Он относится к семейству Agile-методологий и ориентирован на гибкость, адаптивность и быструю доставку ценности 
    для клиента. Scrum помогает командам эффективно справляться с изменяющимися требованиями и сложностью проектов, обеспечивая 
    постоянное улучшение и сотрудничество.

    Основные характеристики Scrum
        Итеративный и инкрементальный подход:
        Работа делится на небольшие циклы (итерации) — спринты, обычно длительностью от 1 до 4 недель.
        В конце каждого спринта создаётся инкремент продукта, готовый к использованию или демонстрации.

        Фокус на ценности для клиента:
        Приоритет отдается задачам, которые приносят наибольшую ценность конечному пользователю или заказчику.

        Прозрачность, инспекция и адаптация:
        Все аспекты процесса видны всем участникам.
        Регулярная оценка прогресса и внесение изменений по мере необходимости.

    Роли в Scrum
        Product Owner (Владелец продукта):
        Ответственен за управление и приоритизацию Product Backlog (списка задач проекта).
        Представляет интересы заказчика и конечных пользователей.
        Определяет требования и гарантирует, что команда понимает цели и приоритеты.

        Scrum Master:
        Фасилитатор процесса Scrum.
        Помогает команде соблюдать принципы и практики Scrum.
        Устраняет препятствия, мешающие команде эффективно работать.
        Поддерживает коммуникацию между участниками команды и внешними сторонами.

        Development Team (Команда разработки):
        Самоорганизующаяся группа специалистов, ответственных за создание инкремента продукта.
        Включает разработчиков, тестировщиков, дизайнеров и других специалистов.
        Совместно несут ответственность за выполнение задач спринта.

    Артефакты Scrum
        Product Backlog (Список задач продукта):
        Приоритизированный список всех требований, функций, улучшений и исправлений для продукта.
        Управляется Product Owner’ом.
        Постоянно обновляется и уточняется по мере развития проекта.

        Sprint Backlog (Список задач спринта):
        Подмножество Product Backlog, выбранное для выполнения в текущем спринте.
        Включает задачи, которые команда обязуется завершить.
        Детализировано до уровня задач, необходимых для достижения цели спринта.

        Increment (Инкремент):
        Завершенная часть продукта, которая удовлетворяет критериям готовности (Definition of Done).
        Инкремент должен быть потенциально готов к выпуску и использованию.

    События Scrum

        Sprint (Спринт):
        Основной цикл разработки, обычно длится от 1 до 4 недель.
        Начинается с планирования спринта и заканчивается демонстрацией инкремента.
    
        Sprint Planning (Планирование спринта):
        Совещание в начале спринта.
        Определение цели спринта и выбор задач из Product Backlog для выполнения.
        Команда разбивает задачи на более мелкие подзадачи.

        Daily Scrum (Ежедневный скрам):
        Ежедневная 15-минутная встреча команды.
        Каждый участник отвечает на три вопроса:
        Что я сделал вчера?
        Что я буду делать сегодня?
        Есть ли препятствия на моём пути?

        Sprint Review (Обзор спринта):
        Встреча в конце спринта.
        Демонстрация выполненных задач заинтересованным сторонам.
        Сбор обратной связи и обсуждение возможных улучшений.

        Sprint Retrospective (Ретроспектива спринта):
        Встреча после Sprint Review.
        Обсуждение того, что прошло хорошо, что можно улучшить и какие действия предпринять для повышения эффективности команды.

Что такое Velocity / Capacity?
    Velocity — это мера количества работы, которую команда Scrum способна выполнить за один спринт. Обычно измеряется в story 
    points, функциональных единицах или числе завершённых задач. Скорость помогает команде прогнозировать, сколько работы они 
    смогут выполнить в будущих спринтах, основываясь на исторических данных.
    Capacity — это мера доступного времени и ресурсов команды для выполнения работы в спринте. Вместимость учитывает количество 
    членов команды, их доступность (например, отпуск, обучение) и общее время, доступное для работы над задачами.

Преимущества и недостатки Scrum
    Преимущества: 
    - Гибкость и адаптивность:
    Лёгкость внесения изменений в требования и приоритеты по мере развития проекта.
    - Повышение прозрачности:
    Все участники проекта имеют ясное представление о текущем состоянии и прогрессе.
    -Улучшение качества продукта:
    Постоянное тестирование и интеграция обеспечивают более высокое качество конечного продукта.
    -Быстрая доставка ценности:
    Регулярные инкременты позволяют быстрее предоставлять ценность клиенту.
    -Повышение вовлеченности команды:
    Самоорганизующаяся команда несёт ответственность за результаты, что повышает мотивацию и вовлеченность.

    Недостатки:
    -Необходимость дисциплины и самоорганизации:
    Команда должна быть готова к самостоятельному управлению и соблюдению процессов Scrum.
    -Риски неправильного применения:
    Неправильное понимание и применение принципов Scrum может привести к неэффективности и снижению качества.
    -Зависимость от Product Owner’а:
    Наличие активного и компетентного Product Owner’а критически важно для успеха проекта.
    -Требует постоянного улучшения:
    Команда должна регулярно анализировать и улучшать свои процессы, что требует времени и усилий.

Что такое ретроспектива?
    Встреча после Sprint Review.
    Обсуждение того, что прошло хорошо, что можно улучшить и какие действия предпринять для повышения эффективности команды.

Kanban- это? (опишите подробно)
Преимущества и недостатки Kanban?
Что такое SDLS? Из каких этапов состоит? Что происходит на каждом этапе?
Что такое STLS? Из каких этапов состоит? Что происходит на каждом этапе?
